apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: kube-system
  name: konnectivity-agent
  labels:
    app: konnectivity-agent
spec:
  replicas: 2
  selector:
    matchLabels:
      app: konnectivity-agent
  template:
    metadata:
      labels:
        app: konnectivity-agent
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
    spec:
      hostNetwork: true
      containers:
      - name: konnectivity-agent-container
        image: ${AGENT_IMAGE}
        resources:
          requests:
            cpu: 40m
        command: [ "/proxy-agent"]
        args: [
          "--logtostderr=true",
          "--ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
          "--proxy-server-host=${CLUSTER_IP}",
          "--enable-profiling",
          "--proxy-server-port=8091",
          "--service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token",
          ]
        livenessProbe:
          httpGet:
            scheme: HTTP
            port: 8093
            path: /healthz
          initialDelaySeconds: 15
          timeoutSeconds: 15
        resources:
          limits:
            cpu: 50m
            memory: 30Mi
        volumeMounts:
          - mountPath: /var/run/secrets/tokens
            name: konnectivity-agent-token
      serviceAccountName: konnectivity-agent
      volumes:
      - name: konnectivity-agent-token
        projected:
          sources:
          - serviceAccountToken:
              path: konnectivity-agent-token
              audience: system:konnectivity-server
